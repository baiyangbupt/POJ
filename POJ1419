//
//  main.cpp
//  POJ1419
//
//  Created by B-YMac on 14-7-12.
//  Copyright (c) 2014å¹´ B-YMac. All rights reserved.
//

#include <iostream>
using namespace std;
bool adj[102][102];
int dp[103],stack[103][103],n,res, path[103];

bool dfs(int num, int step){
    if(num==0){
        if(step>res){
            res = step;
            return 1;
        }
        return 0;
    }
    
    bool gain = 0;
    for(int i = 0; i < num; i++){
        int k = stack[step][i];
        if(step+n-k<res)
            break;
        if(step+dp[k]<res)
            break;;
        
        int cnt = 0;
        for(int j = i+1; j < num; j++)
            if(adj[k][stack[step][j]])
                stack[step+1][cnt++] = stack[step][j];
        if(dfs(cnt,step+1)){
            path[step] = k;
            gain = 1;
        }
    }
    if(gain)
        return 1;
    return 0;
}

int main(int argc, const char * argv[])
{
    int nc;
    cin >> nc;
    while(nc--){
        int k;
        cin >> n >> k;
        for(int i = 0; i < n; i++)
            for(int j = 0; j < n; j++)
                adj[i][j] = 1;
        
        res = 0;
        for(int i = 0; i < k; i++){
            int x,y;
            cin >> x >> y;
            adj[x-1][y-1] = adj[y-1][x-1] = 0;
        }
        
        for(int i = n-1; i >= 0; i--){
            int sz = 0;
            for(int j = i+1; j < n; j++)
                if(adj[i][j])
                    stack[1][sz++] = j;
            if(dfs(sz,1))
                path[0] = i;
            //cout << path[0] << ' ' << path[1] << ' ' << path[2] << endl;
            dp[i] = res;
        }
        cout << res << endl;
        
        for(int i = 0; i < res; i++)
            cout << path[i]+1 << ' ';
        cout << endl;
    }
    return 0;
}

